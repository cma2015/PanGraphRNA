<tool id="Assess_Reads_Quality" name="Quality Control for Sequencing Data">

  <command><![CDATA[
        mkdir -p ${__tool_directory__}/$$/ &&
        /home/galaxy/miniconda3/envs/bio/bin/fastp -w ${thread}
                -q ${qualified_quality_phred} 
                -l ${length_required}
                #if $type.single_paired_selector == "single":
                     -i '$readSE'
                     -o ${cleanReads}
                     #if $adapter_sequence.adapter_sequence_input == "single":
                        -a '${adapter1}'
                     #end if
                #else:
                     -i '$readR1'
                     -o ${cleanReads_1}
                     -I '$readR2'
                     -O ${cleanReads_2}
                     #if $adapter_sequence.adapter_sequence_input == "paired":
                        -a '${adapter1}'
                        -A '${adapter2}'
                     #else:
                        --detect_adapter_for_pe
                     #end if
                #end if
                -h ${__tool_directory__}/$$/fastp.html
                -j ${__tool_directory__}/$$/fastp.json
        
        && mv ${__tool_directory__}/$$/fastp.html 
                #if $type.single_paired_selector == "single":
                        $reads_quality_se
                #else:
                        $reads_quality_pe
                #end if
        && rm -rf ${__tool_directory__}/$$/
  ]]></command>
  <inputs>
        <conditional name="type">
                <param name="single_paired_selector" type="select" label="Single-end or paired-end reads?">
                        <option value="single" selected="true">Single-end</option>
                        <option value="paired">Paired-end</option>
                </param>
                <when value="single">
                        <param name="readSE" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq" label="Read file (SE)"/>
                </when>
                <when value="paired">
                        <param name="readR1" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq,fastq.gz" label="Read file (R1)"/>
                        <param name="readR2" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq,fastq.gz" label="Read file (R2)"/>
                </when>
        </conditional>
        <param name="length_required"  argument="-l" type="integer" value="15" label="Minimum read length" help="Reads shorter than this value will be discarded, default is 15."/>
        <param name="qualified_quality_phred"  argument="-q" type="integer" value="15" label="The quality value that a base is qualified" help="Default 15 means phred quality >=Q15 is qualified."/>

        <conditional name="adapter_sequence">
                <param name="adapter_sequence_input" type="select" label="Adapter sequences" display="radio">
                        <option value="Auto_detect" selected="true">Auto detect</option>
                        <option value="single">Adapter sequences for single-end reads</option>
                        <option value="paired">Adapter sequences for paired-end reads</option>
                </param>
                <when value="single">
                        <param name="adapter1" argument="-a" type="text"  label="Input adapter sequences"  />
                </when>
                <when value="paired">
                        <param name="adapter1" argument="-a" type="text"  label="Input adapter sequences 1"  />
                        <param name="adapter2" argument="-A" type="text"  label="Input adapter sequences 2"  />
                </when>
        </conditional>
        <param name="thread" type="integer" value="1" min="1" max="4" label="Threads" help="The number of threads used for parallel computation."/>

  </inputs>
  <stdio>
        <exit_code range="1:"  level="fatal" description="Error Running combine collection to a file" />
  </stdio>
   <outputs>
           <data name="reads_quality_se" format="html" label="${type.readSE.name}_reads_quality_report.html">
                   <filter>type['single_paired_selector'] == "single"</filter>
           </data>
           <data name="reads_quality_pe" format="html" label="${type.readR1.name}_reads_quality_report.html">
                   <filter>type['single_paired_selector'] == "paired"</filter>
           </data>
                <data name="cleanReads" format="fastq" label="${type.readSE.name}_clean_reads.fastq">
                        <filter>type['single_paired_selector'] == "single"</filter>
                </data>
                <data name="cleanReads_1" format="fastq" label="${type.readR1.name}_clean_reads_R1.fastq">
                        <filter>type['single_paired_selector'] == "paired"</filter>
                </data>
                <data name="cleanReads_2" format="fastq" label="${type.readR2.name}_clean_reads_R2.fastq">
                        <filter>type['single_paired_selector'] == "paired"</filter>
                </data>
    </outputs>
<help><![CDATA[
.. class:: infomark

**What it does**

In this function, one existing NGS tool fastp (Chen *et al*., 2018) is integrated to check sequencing reads quality and obtain high-quality reads, respectively.


-----

.. class:: infomark

**Inputs**

- **Input FASTQ file:** single-end or paired-end raw epitranscriptome sequence reads in FASTQ format
- **Adapter sequences:** optional, adapter sequences in FASTA format

-----

.. class:: infomark

**Parameters**

- **Minimum read length:** reads shorter than this value will be discarded, default is 15 (-l)
- **The quality value that a base is qualified**

-----

.. class:: infomark

**Outputs**

- **Clean reads in FASTQ format**
- **Clean reads fastp report in HTML format**

]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/bty560</citation>
        
    </citations>
</tool>